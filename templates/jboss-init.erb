#! /bin/bash

### BEGIN INIT INFO
# Provides:		
# Required-Start:	$network $local_fs $remote_fs
# Required-Stop:
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	Application Server ver. <%= scope.lookupvar('version') %>
### END INIT INFO

USER=<%= scope.lookupvar('jboss::params::jboss_user') %>
JBOSSPATH=<%= scope.lookupvar('jboss_home') %>/bin
__NAME="Application Server"
echo $USER
echo $USER
echo $JBOSSPATH
#test -x ${JBOSSPATH}/jboss-cli || exit 2
test -x ${JBOSSPATH}/standalone.sh || exit 2
echo $USER
. /lib/lsb/init-functions

function procStart() {
	# Make sure only root can run our script
	if [[ $EUID -ne 0 ]]; then
	   echo "This script must be run as root" 1>&2
	   exit 1
	fi
	log_daemon_msg "Starting $__NAME"
	_isOk=0
	sudo -u $USER $JBOSSPATH/standalone.sh & > $jboss_pid22
	echo $jboss_pid22
	if [[ $? -ne 0 ]]; then
		_isOk=2
	fi
	log_end_msg $_isOk
	return $_isOk
}
function procStop() {
	# Make sure only root can run our script
	if [[ $EUID -ne 0 ]]; then
	   echo "This script must be run as root" 1>&2
	   exit 1
	fi
	log_daemon_msg "Stoping $__NAME"
	_isOk=0
	sudo -u $USER ${JBOSSPATH}/jboss-cli.sh --connect command=:shutdown > /dev/null
	if [[ $? -ne 0 ]]; then
		_isOk=3
	fi
	log_end_msg $_isOk
	return $_isOk
}

case "$1" in
	start)
		procStart
		exit $?
	;;
	stop)
		procStop
		exit $?
	;;
	status)
		echo -n "$__NAME status: "
		count=`sudo -u $USER ${JBOSSPATH}/jboss-cli list-domains | grep run | grep -v not | wc -l`
		if test "$count" -gt "0"; then
			realpath=`dirname $(readlink -f $JBOSSPATH)`
			pid=`ps aux | grep $realpath | grep -v grep | awk '{print $2}'`
			echo "running (pid: $pid)"
			exit 0
		else
			echo stopped
			exit 4
		fi
	;;
	restart)
		procStop
		if test "$?" != "0"; then
		    exit 3
		fi
		procStart
		exit $?
	;;
	*)
		echo $"usage: $0 {start|stop|status|restart}"
		exit 1
esac
